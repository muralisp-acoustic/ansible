#!/bin/bash
if [ $# -eq 0 ]
then
	echo "Usage: <script_name> <git_repo> <playbook_name> <optional_parameters>"
fi
#docker run -v "${PWD}":/work:ro -v ~/.ansible/roles:/root/.ansible/roles -v ~/.ssh:/root/.ssh:ro --rm spy86/ansible:latest ansible-playbook playbook.yml
git_repo=$1
git_repo_dir=`echo $git_repo | grep -o "/.*\.git" | sed -n 's/\///p'`
shift
playbook_name=$2
shift
cd /work;git clone $git_repo
## See if git clone is successful
if [ $? -ne 0 ]
then
	cd /work/$git_repo
	while read aws_account
	do
  		rm -f files/*.txt
  		for region in `echo "us-east-1 eu-central-1 ca-central-1 ap-south-1 ap-southeast-1 ap-southeast-2"`
  		do
    			export AWS_REGION=$region
    			export AWS_PROFILE=$aws_account
    			ansible-playbook get_ebs_volumes_with_available_status.yml
    			cat files/*.txt > reports/detached_ebs_$AWS_PROFILE.csv

    			sed -it '/^ *$/d' reports/detached_ebs_$AWS_PROFILE.csv
    			sed -it 's/^ *//' reports/detached_ebs_$AWS_PROFILE.csv
  	done
  #sed -it '/^ *$/d' reports/discount_tag_$AWS_PROFILE.csv
  #sed -it '/^ *$/d' reports/discount_tag_$AWS_PROFILE.csv
	done < aws_accounts
else
	echo "Error in cloning git repo"
fi


